spring.application.name=rewards
#zookeepr가 8080씀... docker로 바꾸면서 이거 바꾸기
server.port = 8081

# MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# DB Source URL
spring.datasource.url=jdbc:mysql://localhost:3306/basestudy
# DB username
spring.datasource.username=basestudy
# DB password
spring.datasource.password=basestudy
# 실행 쿼리문 표시
spring.jpa.show-sql=true
# 실행시 ddl구문과 관련된 설정
spring.jpa.hibernate.ddl-auto=update
# 쿼리문 출력시 포맷 정렬
spring.jpa.properties.hibernate.format_sql=true
server.error.whitelabel.enabled=false

#redis
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.ttl=60
spring.redis.coupon.lock.prefix=coupon:lock:

# Kafka 서버 설정
spring.kafka.bootstrap-servers=localhost:9092

# Producer 설정
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Consumer 설정
spring.kafka.consumer.group-id=my-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Auto-offset 설정 (earliest: 가장 오래된 메시지부터 읽음)
spring.kafka.consumer.auto-offset-reset=earliest

# Logging
logging.config: classpath:log4j2.xml
# logging.level.org.springframework=INFO
 logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE

#jwt #30분
jwt.expiration= 1800000 

#swagger
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/api-docs
springdoc.paths-to-match=/api/**
